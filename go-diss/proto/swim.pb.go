// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: swim.proto

package swim

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message for pinging nodes
type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_swim_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *PingRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAlive       bool                   `protobuf:"varint,1,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_swim_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

// Message for indirect probes
type IndirectPingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequesterId   string                 `protobuf:"bytes,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	ProxyNodes    []string               `protobuf:"bytes,3,rep,name=proxy_nodes,json=proxyNodes,proto3" json:"proxy_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndirectPingRequest) Reset() {
	*x = IndirectPingRequest{}
	mi := &file_swim_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndirectPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndirectPingRequest) ProtoMessage() {}

func (x *IndirectPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndirectPingRequest.ProtoReflect.Descriptor instead.
func (*IndirectPingRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{2}
}

func (x *IndirectPingRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

func (x *IndirectPingRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *IndirectPingRequest) GetProxyNodes() []string {
	if x != nil {
		return x.ProxyNodes
	}
	return nil
}

type IndirectPingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndirectPingResponse) Reset() {
	*x = IndirectPingResponse{}
	mi := &file_swim_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndirectPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndirectPingResponse) ProtoMessage() {}

func (x *IndirectPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndirectPingResponse.ProtoReflect.Descriptor instead.
func (*IndirectPingResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{3}
}

func (x *IndirectPingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Message for failure notification
type FailureNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FailedNodeId  string                 `protobuf:"bytes,1,opt,name=failed_node_id,json=failedNodeId,proto3" json:"failed_node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailureNotification) Reset() {
	*x = FailureNotification{}
	mi := &file_swim_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailureNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureNotification) ProtoMessage() {}

func (x *FailureNotification) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureNotification.ProtoReflect.Descriptor instead.
func (*FailureNotification) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{4}
}

func (x *FailureNotification) GetFailedNodeId() string {
	if x != nil {
		return x.FailedNodeId
	}
	return ""
}

// Dissemination RPC: multicasts failure information
type DisseminationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`               // The node that detected the failure
	FailedNodeId  string                 `protobuf:"bytes,2,opt,name=failed_node_id,json=failedNodeId,proto3" json:"failed_node_id,omitempty"` // The node that failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisseminationRequest) Reset() {
	*x = DisseminationRequest{}
	mi := &file_swim_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisseminationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisseminationRequest) ProtoMessage() {}

func (x *DisseminationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisseminationRequest.ProtoReflect.Descriptor instead.
func (*DisseminationRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{5}
}

func (x *DisseminationRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *DisseminationRequest) GetFailedNodeId() string {
	if x != nil {
		return x.FailedNodeId
	}
	return ""
}

type DisseminationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisseminationResponse) Reset() {
	*x = DisseminationResponse{}
	mi := &file_swim_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisseminationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisseminationResponse) ProtoMessage() {}

func (x *DisseminationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisseminationResponse.ProtoReflect.Descriptor instead.
func (*DisseminationResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{6}
}

func (x *DisseminationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Join RPC: new node requests membership info
type JoinRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NewNodeId      string                 `protobuf:"bytes,1,opt,name=new_node_id,json=newNodeId,proto3" json:"new_node_id,omitempty"`
	NewNodeAddress string                 `protobuf:"bytes,2,opt,name=new_node_address,json=newNodeAddress,proto3" json:"new_node_address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_swim_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{7}
}

func (x *JoinRequest) GetNewNodeId() string {
	if x != nil {
		return x.NewNodeId
	}
	return ""
}

func (x *JoinRequest) GetNewNodeAddress() string {
	if x != nil {
		return x.NewNodeAddress
	}
	return ""
}

type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Membership    []string               `protobuf:"bytes,1,rep,name=membership,proto3" json:"membership,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_swim_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{8}
}

func (x *JoinResponse) GetMembership() []string {
	if x != nil {
		return x.Membership
	}
	return nil
}

var File_swim_proto protoreflect.FileDescriptor

var file_swim_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x77,
	0x69, 0x6d, 0x22, 0x47, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0c, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x22, 0x76, 0x0a, 0x13, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x30,
	0x0a, 0x14, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x3b, 0x0a, 0x13, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x59, 0x0a,
	0x14, 0x44, 0x69, 0x73, 0x73, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x73,
	0x65, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x57, 0x0a, 0x0b, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65,
	0x77, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x65, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65,
	0x77, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x2e, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x32, 0x87, 0x01, 0x0a, 0x0f, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67,
	0x12, 0x11, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x49,
	0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x86,
	0x01, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x73, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x73, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x44, 0x69, 0x73, 0x73, 0x65, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x77,
	0x69, 0x6d, 0x2e, 0x44, 0x69, 0x73, 0x73, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e,
	0x12, 0x11, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x73, 0x77,
	0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_swim_proto_rawDescOnce sync.Once
	file_swim_proto_rawDescData []byte
)

func file_swim_proto_rawDescGZIP() []byte {
	file_swim_proto_rawDescOnce.Do(func() {
		file_swim_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_swim_proto_rawDesc), len(file_swim_proto_rawDesc)))
	})
	return file_swim_proto_rawDescData
}

var file_swim_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_swim_proto_goTypes = []any{
	(*PingRequest)(nil),           // 0: swim.PingRequest
	(*PingResponse)(nil),          // 1: swim.PingResponse
	(*IndirectPingRequest)(nil),   // 2: swim.IndirectPingRequest
	(*IndirectPingResponse)(nil),  // 3: swim.IndirectPingResponse
	(*FailureNotification)(nil),   // 4: swim.FailureNotification
	(*DisseminationRequest)(nil),  // 5: swim.DisseminationRequest
	(*DisseminationResponse)(nil), // 6: swim.DisseminationResponse
	(*JoinRequest)(nil),           // 7: swim.JoinRequest
	(*JoinResponse)(nil),          // 8: swim.JoinResponse
}
var file_swim_proto_depIdxs = []int32{
	0, // 0: swim.FailureDetector.Ping:input_type -> swim.PingRequest
	2, // 1: swim.FailureDetector.IndirectPing:input_type -> swim.IndirectPingRequest
	5, // 2: swim.Dissemination.Disseminate:input_type -> swim.DisseminationRequest
	7, // 3: swim.Dissemination.Join:input_type -> swim.JoinRequest
	1, // 4: swim.FailureDetector.Ping:output_type -> swim.PingResponse
	3, // 5: swim.FailureDetector.IndirectPing:output_type -> swim.IndirectPingResponse
	6, // 6: swim.Dissemination.Disseminate:output_type -> swim.DisseminationResponse
	8, // 7: swim.Dissemination.Join:output_type -> swim.JoinResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_swim_proto_init() }
func file_swim_proto_init() {
	if File_swim_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_swim_proto_rawDesc), len(file_swim_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_swim_proto_goTypes,
		DependencyIndexes: file_swim_proto_depIdxs,
		MessageInfos:      file_swim_proto_msgTypes,
	}.Build()
	File_swim_proto = out.File
	file_swim_proto_goTypes = nil
	file_swim_proto_depIdxs = nil
}
