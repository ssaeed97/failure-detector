syntax = "proto3";

package swim;

option go_package = "./;swim";

// Existing messages
message PingRequest {
    string sender_id = 1;
    string target_id = 2;
}

message PingResponse {
    bool is_alive = 1;
}

message IndirectPingRequest {
    string requester_id = 1;
    string target_id = 2;
    repeated string proxy_nodes = 3;
}

message IndirectPingResponse {
    bool success = 1;
}

message DisseminationRequest {
    string sender_id = 1;
    string failed_node_id = 2;
}

message DisseminationResponse {
    bool success = 1;
}

message JoinRequest {
    string new_node_id = 1;
    string new_node_address = 2;
}

message JoinResponse {
    repeated string membership = 1;
}

// New messages for membership update
message MembershipUpdateRequest {
    string failed_node_id = 1;
}

message MembershipUpdateResponse {
    bool success = 1;
}

// Existing FailureDetector service plus the new UpdateMembership RPC.
service FailureDetector {
    rpc Ping(PingRequest) returns (PingResponse);
    rpc IndirectPing(IndirectPingRequest) returns (IndirectPingResponse);
    rpc UpdateMembership(MembershipUpdateRequest) returns (MembershipUpdateResponse);
}

service Dissemination {
    rpc Disseminate(DisseminationRequest) returns (DisseminationResponse);
    rpc Join(JoinRequest) returns (JoinResponse);
}
